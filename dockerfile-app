# Pull your base docker image
# Using rocker for R and the light 'versioned' tag (not the RStudio)
FROM rocker/tidyverse:4.0.4

# Packages to enable ODBC and installation of the Microsoft drivers via curl
RUN apt-get update -y && apt-get install -y  \
    curl \
    freetds-bin \
    freetds-dev \
    git \
    gnupg2 \
    odbc-postgresql \
    tdsodbc \
    unixodbc \
    unixodbc-dev \
    tzdata

# See about installing ODBC drivers here: https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
# Note that the driver version installed needs to match the version used in the code
# Here debian stretch (as per tidyverse:4)
RUN curl https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list
RUN apt-get update -y
RUN ACCEPT_EULA=Y apt-get install -y msodbcsql17 mssql-tools

# Permissions are such that works fine as root but not from RStudio where user is not root
# so MUST do the following else an unhelpful error message tells you the file does not exist
COPY odbc/* /etc/
RUN chmod a+rw /etc/odbc.ini && chmod a+rw /etc/odbcinst.ini

# YOU MUST BUILD WITH build_args i.e. --build-arg USER_ID=$(id -u) \
# Now install and set-up as per calling user
# See https://vsupalov.com/docker-shared-permissions/
ARG USER_NAME
ARG USER_ID
ARG GROUP_ID

RUN addgroup --gid $GROUP_ID $USER_NAME
RUN adduser --disabled-password --gecos '' --uid $USER_ID --gid $GROUP_ID $USER_NAME

# Install necessary libraries and R set-up
# Do separately to the app installation so that unless you change the necessary
# libraries you can debug end edit the app without rebuilding the full image

RUN install2.r odbc renv
COPY dev/renv.lock /home/$USER_NAME/renv.lock
RUN Rscript -e "renv::restore(lockfile='/home/$USER_NAME/renv.lock')"

# COPY .Renviron NOT .Rprofile since you just want the secrets
# and .Rprofile will try to run renv::activate() which is not available
COPY .Renviron /home/$USER_NAME/

# Now copy supporting files in app to the image
COPY app/app /home/$USER_NAME/
# Now copy the main file 'app.R'
COPY app/app.R /home/$USER_NAME/

# Start the container with a 'dummy' process that prevents the container
# immediately stopping
USER $USER_NAME
WORKDIR /home/$USER_NAME
CMD tail -f /dev/null





